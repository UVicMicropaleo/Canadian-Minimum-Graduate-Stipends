mean(sos$Net.domestic...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.International...MBM.Threshold..2023.,na.rm=T)
length(sos$University)
mean(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")],na.rm=TRUE)
mean(sos$Net.Stipend[which(sos$Guaranteed.Funding == "Yes")],na.rm=TRUE)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")],na.rm=TRUE)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
range(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
par(mfcol=c(1,1))
boxplot(sos$Net.domestic...Rent.year[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported Domestic students after paying rent")
abline(h=0)
boxplot(sos$Net.domestic...Rent....12K[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported Domestic students after paying rent and assuming ~$12k for food & incidentals")
abline(h=0)
#Province
## Gross Stipend (Domestic) Boxplots
boxplot(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Province[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Gross provincial")
abline(h=0)
## Net Stipend (Domestic) Boxplots
boxplot(sos$Net.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Province[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Net Provincial")
abline(h=0)
## Vs. poverty threshold (Domestic)
boxplot(sos$Net.domestic...MBM.Threshold..2023.[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Province[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="MBM Shortfall, provincial")
abline(h=0)
read.csv("Minimum Stipend Data Collection_v1_2.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#https://trustforlondon.org.uk/data/poverty-thresholds/
#uk cost of living
#https://homelet.co.uk/homelet-rental-index
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
166*52->uk.cost.of.living.min
304*52->uk.cost.of.living.max
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
mean(sos$Tuition.Get...2,na.rm=T)
sd(sos$Tuition.Get...2,na.rm=T)
?sd
mean(sos$Tuition.Parse...2,na.rm=T)
sd(sos$Tuition.Parse...2,na.rm=T)
mean(sos$Stipend.Get...3,na.rm=T)
sos$Stipend.Get...3
read.csv("Minimum Stipend Data Collection_v1_2.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
sos$Stipend.Get...3
read.csv("Minimum Stipend Data Collection_v1_2.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
mean(sos$Stipend.Get...3,na.rm=T)
mean(sos$Stipend.Get...3,na.rm=T)
sos$Stipend.Get...3
read.csv("Minimum Stipend Data Collection_v1_2.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
mean(sos$Stipend.Get...3,na.rm=T)
sd(sos$Stipend.Get...3,na.rm=T)
mean(sos$Stipend.Complete...3,na.rm=T)
sd(sos$Stipend.Complete...3,na.rm=T)
read.csv("SOS_ Minimum Stipend Data Collection - Finalized Information - Machine.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
head(sos)
length(sos$University)
length(unique(sos$University))
mean(sos$Net.domestic...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.International...MBM.Threshold..2023.,na.rm=T)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
View(sos)
read.csv("SOS_ Minimum Stipend Data Collection - Finalized Information - Machine.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
mean(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
sos$Total.Int.Fees
read.csv("SOS_ Minimum Stipend Data Collection - Finalized Information - Machine.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
length(sos$University)
length(unique(sos$University))
mean(sos$Domestic.Tuition)
mean(sos$Domestic.Tuition,na.rm=T)
sos$Domestic.Tuition
read.csv("SOS_ Minimum Stipend Data Collection - Finalized Information - Machine.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
mean(sos$Domestic.Tuition,na.rm=T)
mean(sos$Domestic.Tuition)
median(sos$International.Tuition)
length(which(sos$Guaranteed.Funding == "Yes"))
length(which(sos$Guaranteed.Funding == ""))
mean(sos$Gross.Stipend,na.rm=TRUE)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
mean(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
median(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
mean(sos$Net.domestic...MBM.Threshold..2023.,na.rm=T)
ean(sos$Net.International...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.International...MBM.Threshold..2023.,na.rm=T)
length(sos$University)
length(unique(sos$University))
length(which(sos$Guaranteed.Funding == "Yes"))
read.csv("SOS_ Minimum Stipend Data Collection - Finalized Information - Machine.csv")->sos
# colnames(sos)
#us https://www.nature.com/articles/d41586-022-01392-w
read.csv("Biology Benchmark Comparison - 07-23-2024.csv")->us.data
#exchange rate
us.to.cad<-1.38
#convert from usd to cad internally below
#uk https://www.ukri.org/apply-for-funding/studentships-and-doctoral-training/london-weighting-enhanced-stipends-and-co-funding/
#uk average rent
uk.stipend<-19237
#uk.tuition.stipend<-4786
uk.to.cad<-1.78
#convert from gbp to cad
uk.stipend*uk.to.cad->uk.stipend
uk.cost.of.living.max*uk.to.cad->uk.cost.of.living.max
uk.cost.of.living.min*uk.to.cad->uk.cost.of.living.min
#NSERC Scholarships
NSERC.msc<-27000
NSERC.phd<-40000
length(which(sos$Guaranteed.Funding == "Yes"))
unique(sos$Guaranteed.Funding)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
mean(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
mean(sos$Net.domestic...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.International...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.domestic...MBM.Threshold..2023.[which(sos$Guaranteed.Funding == "Yes")],na.rm=T)
length(which(sos$Guaranteed.Funding == ""))
mean(sos$Gross.Stipend,na.rm=TRUE)
mean(sos$Net.Stipend,na.rm=TRUE)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]
)
mean(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
range(sos$Total.Domestic.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")]*100,na.rm=T)
mean(sos$Net.domestic...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.International...MBM.Threshold..2023.,na.rm=T)
mean(sos$Net.Stipend) - mean(us.data$Annual.guaranteed.salary*us.to.cad)
mean(sos$Net.Stipend,na.rm=T) - mean(us.data$Annual.guaranteed.salary*us.to.cad)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(lmerTest)
install.packages(lmertest)
install.packages("lmertest")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(lmerTest)
install.packages("lmerTest")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggplot2)
library(visreg)
install.packages("visreg")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggplot2)
library(visreg)
# PhD vs. MSc
par(mfcol=c(1,2))
#setting up a stable y to maintain through various plots
ylimits<-c(min(c(sos$Net.domestic...MBM.Threshold..2024.,
{us.data$Annual.guaranteed.salary-us.data$MIT.Living.Wage..1.adult..0.children.}*us.to.cad,
uk.stipend-uk.cost.of.living.min,
uk.stipend-uk.cost.of.living.max),
na.rm=T),
max(c(sos$Gross.Stipend,
{us.data$Annual.guaranteed.salary}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T)
)
## Gross Stipend (Domestic) Boxplots
boxplot(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Gross Domestic")
abline(h=0,col="black")
abline(h=c(NSERC.msc,NSERC.phd),col="red")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US [box],UK [line]")
abline(h=uk.stipend,col="blue")
abline(h=0,col="black")
par(mfcol=c(1,2))
#setting up a stable y to maintain through various plots
ylimits<-c(min(c(sos$Net.domestic...MBM.Threshold..2024.,
{us.data$Annual.guaranteed.salary-us.data$MIT.Living.Wage..1.adult..0.children.}*us.to.cad,
uk.stipend-uk.cost.of.living.min,
uk.stipend-uk.cost.of.living.max),
na.rm=T),
max(c(sos$Gross.Stipend,
{us.data$Annual.guaranteed.salary}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T)
)
## Gross Stipend (Domestic) Boxplots
boxplot(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Gross Domestic")
abline(h=0,col="black")
abline(h=c(NSERC.msc,NSERC.phd),col="red")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US [box],UK [line]")
abline(h=uk.stipend,col="blue")
abline(h=0,col="black")
# PhD vs. MSc
par(mfcol=c(1,2))
#setting up a stable y to maintain through various plots
ylimits<-c(min(c(sos$Net.domestic...MBM.Threshold..2024.,
{us.data$Annual.guaranteed.salary-us.data$MIT.Living.Wage..1.adult..0.children.}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T),
max(c(sos$Gross.Stipend,
{us.data$Annual.guaranteed.salary}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T)
)
## Gross Stipend (Domestic) Boxplots
boxplot(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Gross Domestic")
abline(h=0,col="black")
abline(h=c(NSERC.msc,NSERC.phd),col="red")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US [box],UK [line]")
abline(h=uk.stipend,col="blue")
abline(h=0,col="black")
# PhD vs. MSc
par(mfcol=c(1,2))
#setting up a stable y to maintain through various plots
ylimits<-c(min(c(sos$Net.domestic...MBM.Threshold..2024.,
{us.data$Annual.guaranteed.salary-us.data$MIT.Living.Wage..1.adult..0.children.}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T),
max(c(sos$Gross.Stipend,
{us.data$Annual.guaranteed.salary}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T)
)
## Gross Stipend (Domestic) Boxplots
boxplot(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Gross Domestic")
abline(h=0,col="black")
abline(h=c(NSERC.msc,NSERC.phd),col="red")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US [box],UK [line]")
abline(h=uk.stipend,col="blue")
abline(h=0,col="black")
par(mfcol=c(1,2))
#setting up a stable y to maintain through various plots
ylimits<-c(min(c(sos$Net.domestic...MBM.Threshold..2024.,
{us.data$Annual.guaranteed.salary-us.data$MIT.Living.Wage..1.adult..0.children.}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T),
max(c(sos$Gross.Stipend,
{us.data$Annual.guaranteed.salary}*us.to.cad,
uk.stipend,
uk.stipend),
na.rm=T)
)
## Gross Stipend (Domestic) Boxplots
boxplot(sos$Gross.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Gross Domestic")
abline(h=0,col="black")
abline(h=c(NSERC.msc,NSERC.phd),col="red")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US [box],UK [line]")
abline(h=uk.stipend,col="blue")
abline(h=0,col="black")
boxplot(sos$Gross.Stipend ~ sos$Program,
ylim=ylimits,
main="Gross Domestic")
abline(h=0,col="black")
abline(h=c(NSERC.msc,NSERC.phd),col="red")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US [box],UK [line]")
abline(h=uk.stipend,col="blue")
abline(h=0,col="black")
boxplot(sos$Net.Stipend[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Net Domestic")
abline(h=0,col="black")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US,UK")
abline(h=0,col="black")
abline(h=uk.stipend,col="blue")
par(mfcol=c(1,1))
boxplot(sos$Net.domestic...MBM.Threshold..2023.[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported Domestic students vs. poverty line")
abline(h=0)
boxplot(sos$Net.Stipend ~ sos$Program,
ylim=ylimits,
main="Net Domestic")
abline(h=0,col="black")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US,UK")
abline(h=0,col="black")
abline(h=uk.stipend,col="blue")
par(mfcol=c(1,2))
boxplot(sos$Net.Stipend ~ sos$Program,
ylim=ylimits,
main="Net Domestic")
abline(h=0,col="black")
boxplot(us.data$Annual.guaranteed.salary*us.to.cad,
ylim=ylimits,
main="US,UK")
abline(h=0,col="black")
abline(h=uk.stipend,col="blue")
par(mfcol=c(1,1))
boxplot(sos$Net.domestic...MBM.Threshold..2023. ~ sos$Progra,
ylim=ylimits,
main="Supported Domestic students vs. poverty line")
abline(h=0)
plot(sos$University.Endowment..Millions.of.Dollars.[which(sos$Example.Department == "Physics")],
sos$Net.Stipend[which(sos$Example.Department == "Physics")],
pch=16,
col="purple",
ylim=c(0,max(sos$Net.Stipend,na.rm=T)),
main="Univ. Endowment vs. Net Stipends")
points(sos$University.Endowment..Millions.of.Dollars.[which(sos$Example.Department == "Biological Sciences - Ecology")],
sos$Net.Stipend[which(sos$Example.Department == "Biological Sciences - Ecology")],
pch=15,
col="forestgreen")
range(sos$Net.Stipend[which(sos$Example.Department == "Biological Sciences - Ecology")])
range(sos$Net.Stipend[which(sos$Example.Department == "Biological Sciences - Ecology")],na.rm=T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggplot2)
library(visreg)
mean(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,
na.rm=T)
median(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,
na.rm=T)
par(mfcol=c(1,1))
boxplot(sos$Net.International...MBM.Threshold..2023.[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported International students vs. poverty line")
abline(h=0)
mean(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,
na.rm=T)
median(sos$Total.Int.Fees[which(sos$Guaranteed.Funding == "Yes")]/sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")]*100,
na.rm=T)
par(mfcol=c(1,1))
boxplot(sos$Net.International...MBM.Threshold..2023.[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported International students vs. poverty line")
abline(h=0)
abline(h=0)
boxplot(sos$Net.Stipend.Int[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported International students vs. poverty line")
abline(h=0)
boxplot(sos$Gross.Stipend.International[which(sos$Guaranteed.Funding == "Yes")] ~ sos$Program[which(sos$Guaranteed.Funding == "Yes")],
ylim=ylimits,
main="Supported International students")
abline(h=0)
